{"version":3,"sources":["images/caissa-icon.png","components/FormFieldBox/index.js","components/SecurityForm/index.js","components/SinglePricebox/index.js","components/AddPriceForm/index.js","components/PriceForm/index.js","components/SingleSecuritybox/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FormBox","label","onChange","hasError","type","name","value","placeholder","className","SecurityForm","props","selectCountry","selectedCountry","setState","country","updateInput","target","handleFormSubmit","e","preventDefault","state","isin","addSecurity","handleEditSecuritySubmission","fields","formErrors","Object","values","some","console","log","this","onSubmit","handleDeleteSecurity","onClick","cancelPopup","Component","SinglePricebox","isInEditMode","todaydate","date","toggleEditPriceSubmission","bind","index","number","event","handleDeletePrice","AddPriceForm","Number","handlePriceFormSubmit","addPrice","Date","toLocaleDateString","PriceForm","togglePopup","prevState","showPopup","togglePricePopup","showPricePopup","toggleItemEditing","priceArr","map","item","itemIndex","isEditing","handlePriceUpdate","addPricePopup","newPrice","buttonDisabled","deletePriceDate","filter","updatePrice","pricelist","buttonStatus","key","toggleEditing","disabled","SingleSecuritybox","editSecurity","editCurrentSecurity","id","updatePriceList","updateButtonStatus","deleteSecurity","price","buttonstatus","closePopup","App","list","securitiesgroup","editedSecurity","deleteSecurityId","newSecurity","uuid","prices","newPriceList","href","src","logo","alt","securitylist","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,yC,koCC+B5BC,EA7BC,SAAC,GAQV,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,SACAC,EAKI,EALJA,SACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,MACAC,EACI,EADJA,YAEA,OACE,yBAAKC,UAAU,SACb,2BAAOA,UAAU,SAASP,GAC1B,yBAAKO,UAAU,WACb,2BACEN,SAAUA,EACVM,UAAWL,EAAW,cAAgB,QACtCC,KAAMA,EACNC,KAAMA,EACNC,MAAOA,EACPC,YAAaA,IAEdJ,IAAaG,GACZ,yBAAKE,UAAU,WAAf,qCCpBWC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAaRC,cAAgB,SAAAC,GAAe,OAC7B,EAAKC,SAAS,CAAEC,QAASF,KAfR,EAqBnBG,YAAc,oBAAGC,OAAUX,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,MAAnB,OACZ,EAAKO,SAAL,eAAiBR,EAAOC,KAtBP,EAyBnBW,iBAAmB,SAAAC,GAEjBA,EAAEC,iBAFoB,MAIU,EAAKC,MAA7Bf,EAJc,EAIdA,KAAMgB,EAJQ,EAIRA,KAAMP,EAJE,EAIFA,QAJE,EAKgC,EAAKJ,MAAnDY,EALc,EAKdA,YAAaC,EALC,EAKDA,6BAEfC,EAAS,CACbnB,OACAgB,OACAP,WAIIW,EAAaC,OAAOC,OAAOH,GAAQI,MAAK,SAAAtB,GAAK,OAAKA,KAMxD,EAAKO,SAAS,CAAEY,eAAc,WACvBA,IACCH,EAAaA,EAAYE,GACxBD,EAA6BC,OAGtCK,QAAQC,IAAI,aAAcN,IA9C1B,EAAKJ,MAAQ,CACXf,KAAMK,EAAML,MAAQ,GACpBgB,KAAMX,EAAMW,MAAQ,GACpBP,QAASJ,EAAMI,SAAW,GAC1BW,YAAY,GATG,E,qDAsDT,IAAD,SACqCM,KAAKX,MAAzCN,EADD,EACCA,QAASO,EADV,EACUA,KAAMhB,EADhB,EACgBA,KAAMoB,EADtB,EACsBA,WAC7B,OACE,yBAAKjB,UAAU,SACb,yBAAKA,UAAU,eACb,0BAAMwB,SAAUD,KAAKd,iBAAkBT,UAAU,YAC/C,4BAAKuB,KAAKrB,MAAMY,YAAc,eAAiB,iBAC/C,yBAAKd,UAAU,cACb,kBAAC,EAAD,CACEN,SAAU6B,KAAKhB,YACfZ,SAAUsB,EACVxB,MAAM,OACNG,KAAK,OACLC,KAAK,OACLC,MAAOD,IAET,kBAAC,EAAD,CACEH,SAAU6B,KAAKhB,YACfZ,SAAUsB,EACVxB,MAAM,OACNG,KAAK,OACLC,KAAK,OACLC,MAAOe,IAET,yBAAKb,UAAU,SACb,2BAAOA,UAAU,SAAjB,WACA,yBAAKA,UAAU,WACb,kBAAC,IAAD,CACEN,SAAU6B,KAAKpB,cACfH,UAAYM,EAA0B,QAAhB,cACtBR,MAAOQ,IAERW,IAAeX,GACd,yBAAKN,UAAU,WAAf,gCAKR,yBAAKA,UAAYuB,KAAKrB,MAAMY,YAAmD,+BAArC,oCACzCS,KAAKrB,MAAMuB,sBACR,4BACE7B,KAAK,SACL8B,QAAS,kBAAM,EAAKxB,MAAMuB,wBAC1BzB,UAAU,qBAHZ,UAQF,yBAAKA,UAAU,YACf,4BACEJ,KAAK,SACL8B,QAAS,kBAAM,EAAKxB,MAAMyB,eAC1B3B,UAAU,qBAHZ,UAOA,4BAAQJ,KAAK,SAASI,UAAU,mBAAhC,mB,GA/G4B4B,a,OCFrBC,E,kDACnB,WAAY3B,GAAQ,IAAD,8BACjB,cAAMA,IAEDU,MAAQ,CACbkB,cAAc,EACdC,UAAW,EAAK7B,MAAM8B,MAGxB,EAAKC,0BAA4B,EAAKA,0BAA0BC,KAA/B,gBARd,E,wEAYnBX,KAAKlB,UAAS,SAAAO,GAAK,MAAK,CAAEkB,cAAelB,EAAMkB,mB,+BAIrC,IAAD,SACyBP,KAAKX,MAA7BkB,EADD,EACCA,aAAcK,EADf,EACeA,MACtB,OACE,yBAAKnC,UAAU,YACb,6BAASA,UAAU,cACjB,+BACE,+BACE,4BACE,wBAAIA,UAAU,cAAcuB,KAAKrB,MAAM8B,MACvC,wBAAIhC,UAAU,eACb8B,EACG,2BAAOlC,KAAK,OAAOC,KAAK,SAASC,MAAOyB,KAAKrB,MAAMkC,OAAQ1C,SAAU,SAAA2C,GAAK,OAAI,EAAKnC,MAAMR,SAAS2C,EAAOF,MAEzGZ,KAAKrB,MAAMkC,QAGf,wBAAIpC,UAAU,eACZ,4BACEJ,KAAK,SACLI,UAAU,WACV0B,QAASH,KAAKU,2BAEbH,EAAe,OAAS,SAG7B,4BACCP,KAAKrB,MAAMoC,mBACV,4BACE1C,KAAK,SACLI,UAAU,aACV0B,QAAS,kBAAM,EAAKxB,MAAMoC,kBAAkB,EAAKpC,MAAM8B,QAHzD,e,GA5C0BJ,aCCvBW,E,kDACnB,WAAYrC,GAAQ,IAAD,8BACjB,cAAMA,IAeRK,YAAc,oBAAGC,OAAUX,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,MAAOF,EAA1B,EAA0BA,KAA1B,OACZ,EAAKS,SAAL,eAAiBR,EAAgB,WAATD,EAAoB4C,OAAO1C,GAASA,KAjB3C,EAoBnB2C,sBAAwB,SAAA/B,GAEtBA,EAAEC,iBAFyB,MAIF,EAAKC,MAAtBoB,EAJmB,EAInBA,KAAMI,EAJa,EAIbA,OACNM,EAAa,EAAKxC,MAAlBwC,SAEF1B,EAAS,CACbgB,OACAI,UAIInB,EAAaC,OAAOC,OAAOH,GAAQI,MAAK,SAAAtB,GAAK,OAAKA,KAExD,EAAKO,SAAS,CAAEY,eAAc,WACvBA,GACCyB,GAAUA,EAAS1B,OAhC3B,EAAKJ,MAAQ,CACXoB,MAAM,IAAIW,MAAOC,qBACjBR,OAAQlC,EAAMkC,QAAU,GACxBnB,YAAY,GARG,E,qDA0CT,IAAD,SAC8BM,KAAKX,MAAlCoB,EADD,EACCA,KAAMI,EADP,EACOA,OAAQnB,EADf,EACeA,WAEtB,OACE,yBAAKjB,UAAU,cACb,yBAAKA,UAAU,oBACb,0BAAMwB,SAAUD,KAAKkB,sBAAuBzC,UAAU,iBACpD,yCACA,yBAAKA,UAAU,iBACb,6CACA,4BAAKgC,GACL,kBAAC,EAAD,CACEtC,SAAU6B,KAAKhB,YACfZ,SAAUsB,EACVxB,MAAM,eACNG,KAAK,SACLC,KAAK,SACLC,MAAOsC,KAGX,yBAAKpC,UAAU,gCACb,yBAAKA,UAAU,YACf,4BACEJ,KAAK,SACL8B,QAAS,kBAAM,EAAKxB,MAAMyB,eAC1B3B,UAAU,qBAHZ,UAOA,4BAAQJ,KAAK,SAASI,UAAU,mBAAhC,mB,GAxE4B4B,aCCrBiB,E,kDACnB,WAAY3C,GAAQ,IAAD,8BACjB,cAAMA,IAaRK,YAAc,oBAAGC,OAAUX,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,MAAnB,OACd,EAAKO,SAAL,eAAiBR,EAAOC,KAfL,EAiBnBgD,YAAc,WACZ,EAAKzC,UAAS,SAAA0C,GAAS,MAAK,CAC1BC,WAAYD,EAAUC,eAnBP,EAuBnBC,iBAAmB,WACjB,EAAK5C,UAAS,SAAA0C,GAAS,MAAK,CAC1BG,gBAAiBH,EAAUG,oBAzBZ,EA6BnBC,kBAAoB,SAAAhB,GAClB,EAAK9B,SAAS,CACZ+C,SAAU,EAAKxC,MAAMwC,SAASC,KAAI,SAACC,EAAMC,GACvC,OAAIA,IAAcpB,EACT,eACFmB,EADL,CAEEE,WAAYF,EAAKE,YAGdF,QAtCM,EA2CnBG,kBAAoB,SAACpB,EAAOF,GAC1B,IAAM3B,EAAS6B,EAAM7B,OACfV,EAAQU,EAAOV,MACfD,EAAOW,EAAOX,KACpB,EAAKQ,SAAS,CACZ+C,SAAU,EAAKxC,MAAMwC,SAASC,KAAI,SAACC,EAAMC,GACvC,OAAIA,IAAcpB,EACT,eACFmB,EADL,eAEGzD,EAAOC,IAGLwD,QAvDM,EA4DnBI,cAAgB,WACd,EAAKrD,UAAS,SAAA0C,GAAS,MAAK,CAC1BW,eAAgBX,EAAUW,mBA9DX,EAoEjBhB,SAAW,SAAAiB,GACT,EAAKtD,UAAS,SAAA0C,GAAS,MAAK,CAC1BW,eAAgBX,EAAUW,cAE1BN,SAAS,GAAD,mBAAML,EAAUK,UAAhB,gBAA+BO,KACvCC,gBAAgB,OAzEH,EA6EjBtB,kBAAoB,SAAAuB,GAAoB,IAC9B9B,EAAc,EAAKnB,MAAnBmB,UACR,EAAK1B,UAAS,SAAA0C,GAAS,MAAK,CAE1BK,SAAUL,EAAUK,SAASU,QAAO,SAAAR,GAAI,OAAIA,EAAKtB,OAAS6B,KAC1DD,iBAAkBC,IAAoB9B,QAlFzB,EAuFjBtB,iBAAmB,WAAO,IAAD,EAEc,EAAKG,MAEpCI,EAAS,CAACoC,SAJO,EAEfA,SAEkBQ,eAJH,EAELA,gBAIlB,EAAK1D,MAAM6D,YAAY/C,IA1FzB,EAAKJ,MAAQ,CACXwC,SAAU,EAAKlD,MAAM8D,UACrBd,gBAAgB,EAChBQ,eAAe,EACf3B,WAAW,IAAIY,MAAOC,qBACtBZ,KAAM9B,EAAM8B,MAAQ,GACpBI,OAAQlC,EAAMkC,QAAU,GACxBwB,eAAgB,EAAK1D,MAAM+D,cAVZ,E,qDAkGT,IAAD,OACP,OACE,yBAAKjE,UAAU,SACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,cACb,sCACA,yBAAKA,UAAU,cACduB,KAAKX,MAAMwC,SAASC,KAAI,SAACnD,EAAOiC,GAAR,OACvB,kBAAC,EAAD,iBACMjC,EADN,CAEEgE,IAAKhE,EAAM8B,KACXmC,cAAe,kBAAM,EAAKhB,kBAAkBhB,IAC5CG,kBAAmB,EAAKA,kBACxB5C,SAAU,SAACgB,GAAD,OAAO,EAAK+C,kBAAkB/C,EAAGyB,WAI/C,yBAAKnC,UAAU,oCACf,yBAAKA,UAAU,WACb,4BACEJ,KAAK,SACL8B,QAASH,KAAKmC,cACd1D,UAAU,iBACVoE,SAAU7C,KAAKX,MAAMgD,gBAJvB,SAMGrC,KAAKX,MAAM8C,eACN,kBAAC,EAAD,CACEhB,SAAUnB,KAAKmB,SACff,YAAaJ,KAAKmC,gBAG3BnC,KAAKX,MAAMgD,eAAiB,sDAAiC,IAE9D,yBAAK5D,UAAU,YACf,4BACEJ,KAAK,SACL8B,QAASH,KAAKd,iBACdT,UAAU,qBAHZ,kB,GArIyB4B,aCAlByC,E,kDACnB,WAAYnE,GAAQ,IAAD,8BACjB,cAAMA,IAWR4C,YAAc,WACZ,EAAKzC,UAAS,SAAA0C,GAAS,MAAK,CAC1BC,WAAYD,EAAUC,eAdP,EAkBnBC,iBAAmB,WACjB,EAAK5C,UAAS,SAAA0C,GAAS,MAAK,CAC1BG,gBAAiBH,EAAUG,oBApBZ,EAyBnBnC,6BAA+B,SAAAuD,GAAiB,IAAD,EACT,EAAKpE,MAAjCqE,EADqC,EACrCA,oBAAqBC,EADgB,EAChBA,GAG7B,EAAK1B,cAILyB,EAAoB,eAAKD,EAAN,CAAoBE,SAjCtB,EAqCnBT,YAAc,SAAAA,GAAgB,IAAD,EACyB,EAAK7D,MAAjDuE,EADmB,EACnBA,gBAAiBC,EADE,EACFA,mBAAoBF,EADlB,EACkBA,GAE7C,EAAKvB,mBAELwB,EAAgB,eAAIV,EAAL,CAAkBS,QACjCE,EAAmB,eAAIX,EAAL,CAAkBS,SA3CnB,EAiDnB/C,qBAAuB,WAAO,IAAD,EACI,EAAKvB,MAA5ByE,EADmB,EACnBA,eAAgBH,EADG,EACHA,GAGxB,EAAK1B,cAGL6B,EAAeH,IAtDb,EAAK5D,MAAQ,CACXoC,WAAW,EACXE,gBAAgB,EAChBc,UAAW,EAAK9D,MAAM0E,MACtBX,aAAc,EAAK/D,MAAM2E,cANZ,E,qDA6DjB,OACE,yBAAK7E,UAAU,OACb,6BAASA,UAAU,iBACjB,yBAAKA,UAAU,SACb,4BACE,gCAASuB,KAAKrB,MAAML,OAEtB,wBAAIG,UAAU,oBAEhB,+BACE,+BACE,4BACE,wBAAIA,UAAU,cAAcuB,KAAKrB,MAAMW,MACvC,wBAAIb,UAAU,iBAAiBuB,KAAKrB,MAAMI,SAC1C,wBAAIN,UAAU,eACZ,4BAAQJ,KAAK,SAASI,UAAU,YAAY0B,QAASH,KAAK0B,kBAA1D,UACC1B,KAAKX,MAAMsC,eACV,kBAAC,EAAD,CACEc,UAAYzC,KAAKrB,MAAM0E,MACvBX,aAAe1C,KAAKrB,MAAM2E,aAC1Bd,YAAcxC,KAAKwC,YACnBrB,SAAUnB,KAAKrB,MAAMwC,SACrBoC,WAAavD,KAAK0B,mBAElB,MAEN,wBAAIjD,UAAU,eACZ,4BACEJ,KAAK,SACLI,UAAU,WACV0B,QAASH,KAAKuB,aAHhB,QAOCvB,KAAKX,MAAMoC,UACV,kBAAC,EAAD,iBACMzB,KAAKrB,MADX,CAEEa,6BAA+BQ,KAAKR,6BACpCU,qBAAsBF,KAAKE,qBAC3BE,YAAaJ,KAAKuB,eAElB,e,GAvGyBlB,a,iCCoHhCmD,G,kNA9GbnE,MAAQ,CACNoE,KAAMC,EACNjC,WAAW,G,EAIbF,YAAc,WACZ,EAAKzC,UAAS,SAAA0C,GAAS,MAAK,CAC1BC,WAAYD,EAAUC,e,EAK1BuB,oBAAsB,SAAAW,GACpB,EAAK7E,UAAS,SAAA0C,GAAS,MAAK,CAC1BiC,KAAMjC,EAAUiC,KAAK3B,KAAI,SAAA2B,GAAI,OAC3BA,EAAKR,KAAOU,EAAeV,GAA3B,aAAkCQ,QAASE,GAAmBF,SAGlE3D,QAAQC,IAAI,kBAAmB4D,I,EAIjCP,eAAiB,SAAAQ,GACf,EAAK9E,UAAS,SAAA0C,GAAS,MAAK,CAC1BiC,KAAMjC,EAAUiC,KAAKlB,QAAO,SAAAR,GAAI,OAAIA,EAAKkB,KAAOW,U,EAKpDrE,YAAc,SAAAsE,GACZ,EAAK/E,UAAS,SAAA0C,GAAS,MAAK,CAC1BC,WAAYD,EAAUC,UAEtBgC,KAAK,GAAD,mBAAMjC,EAAUiC,MAAhB,gBAA2BI,EAA3B,CAAwCZ,GAAIa,iBAAQC,OAAQ,Y,EAIpEb,gBAAkB,SAACc,GACjB,EAAKlF,UAAS,SAAA0C,GACZ,MAAO,CACLiC,KAAMjC,EAAUiC,KAAK3B,KAAI,SAAA2B,GACvB,OAAIA,EAAKR,KAAOe,EAAaf,GACpB,eAAKQ,EAAZ,CAAkBJ,MAAOW,EAAanC,WAE/B4B,U,EAOjBN,mBAAqB,SAACa,GACpB,EAAKlF,UAAS,SAAA0C,GACZ,MAAO,CACLiC,KAAMjC,EAAUiC,KAAK3B,KAAI,SAAA2B,GACvB,OAAIA,EAAKR,KAAOe,EAAaf,GACpB,eAAKQ,EAAZ,CAAkBH,aAAcU,EAAa3B,iBAEtCoB,U,uDAOP,IAAD,OAEP,OACE,yBAAKhF,UAAU,OACb,4BAAQA,UAAU,cAChB,uBAAGwF,KAAK,IAAIxF,UAAU,YACpB,yBAAKyF,IAAKC,IAAM1F,UAAU,WAAW2F,IAAI,SAD3C,gBAKF,yBAAK3F,UAAU,cACb,yBAAKA,UAAU,aACb,0CACCuB,KAAKX,MAAMoE,KAAK3B,KAAI,SAAAnD,GAAK,OACxB,kBAAC,EAAD,iBACMA,EADN,CAEEgE,IAAKhE,EAAMsE,GACXC,gBAAiB,EAAKA,gBACtBC,mBAAoB,EAAKA,mBACzBkB,aAAgB,EAAKhF,MAAMoE,KAC3BT,oBAAqB,EAAKA,oBAC1BI,eAAgB,EAAKA,qBAGzB,4BACE/E,KAAK,SACLI,UAAU,cACV0B,QAASH,KAAKuB,aAHhB,OAOCvB,KAAKX,MAAMoC,WACV,kBAAC,EAAD,CACElC,YAAaS,KAAKT,YAClBa,YAAaJ,KAAKuB,qB,GArGhBlB,cCGEiE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzF,QAAQyF,MAAMA,EAAMC,c","file":"static/js/main.e85ac674.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/caissa-icon.fe5993b7.png\";","import React from \"react\";\n\nconst FormBox = ({\n  label,\n  onChange,\n  hasError,\n  type,\n  name,\n  value,\n  placeholder\n}) => {\n  return (\n    <div className=\"field\">\n      <label className=\"label\">{label}</label>\n      <div className=\"control\">\n        <input\n          onChange={onChange}\n          className={hasError ? \"input error\" : \"input\"}\n          type={type}\n          name={name}\n          value={value}\n          placeholder={placeholder}\n        />\n        {hasError && !value && (\n          <div className=\"err-msg\">Please fill in the blank field</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FormBox;\n","import React, { Component } from \"react\";\nimport { CountryDropdown } from \"react-country-region-selector\";\nimport FormField from \"../FormFieldBox/index\";\n\nexport default class SecurityForm extends Component {\n  constructor(props) {\n    super(props);\n\n    // initializes state from props if your editing a security\n    // else it'll be a blank form\n    this.state = {\n      name: props.name || \"\",\n      isin: props.isin || \"\",\n      country: props.country || \"\",\n      formErrors: false\n    };\n  }\n\n  /* updates the \"country\" form field */\n  selectCountry = selectedCountry =>\n    this.setState({ country: selectedCountry });\n\n  /* \n    updates the \"name\" and \"isin\" form fields via \n    [e.target.name]: e.target.value \n  */\n  updateInput = ({ target: { name, value } }) =>\n    this.setState({ [name]: value });\n\n  /* handles security form submissions */\n  handleFormSubmit = e => {\n    // prevents page refreshes on submission\n    e.preventDefault();\n\n    const { name, isin, country } = this.state;\n    const { addSecurity, handleEditSecuritySubmission } = this.props;\n\n    const fields = {\n      name,\n      isin,\n      country\n    };\n\n    // checks if any of the form fields contain empty values\n    const formErrors = Object.values(fields).some(value => !value);\n\n    // this sets formError state, then after setting state\n    // it'll check if there are errors, if no errors, then\n    // it will either call addSecurity or editSecurity or deleteSecurity depending on if\n    // one of them was passed in from a parent component\n    this.setState({ formErrors }, () => {\n      if (!formErrors) {\n        if (addSecurity) addSecurity(fields);\n        else handleEditSecuritySubmission(fields);\n      }\n    });\n    console.log(\"submission\", fields);\n  };\n\n  render() {\n    const { country, isin, name, formErrors } = this.state;\n    return (\n      <div className=\"popup\">\n        <div className=\"popup-inner\">\n          <form onSubmit={this.handleFormSubmit} className=\"add-form\">\n            <h2>{this.props.addSecurity ? \"Add Security\" : \"Edit Security\"}</h2>\n            <div className=\"form-input\">\n              <FormField\n                onChange={this.updateInput}\n                hasError={formErrors}\n                label=\"Name\"\n                type=\"text\"\n                name=\"name\"\n                value={name}\n              />\n              <FormField\n                onChange={this.updateInput}\n                hasError={formErrors}\n                label=\"ISIN\"\n                type=\"text\"\n                name=\"isin\"\n                value={isin}\n              />\n              <div className=\"field\">\n                <label className=\"label\">Country</label>\n                <div className=\"control\">\n                  <CountryDropdown\n                    onChange={this.selectCountry}\n                    className={!country ? \"input error\" : \"input\"}\n                    value={country}\n                  />\n                  {formErrors && !country && (\n                    <div className=\"err-msg\">Please select the country</div>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className={!this.props.addSecurity ? \"buttons-box flex-content-between\" : \"buttons-box flex-content-end\"}>\n            {this.props.handleDeleteSecurity && (\n                <button\n                  type=\"button\"\n                  onClick={() => this.props.handleDeleteSecurity()}\n                  className=\"btn delete-button\"\n                >\n                  Delete\n                </button>\n              )}\n              <div className=\"add-btns\">\n              <button\n                type=\"button\"\n                onClick={() => this.props.cancelPopup()}\n                className=\"btn cancel-button\"\n              >\n                Cancel\n              </button>\n              <button type=\"submit\" className=\"btn save-button\">\n                Submit\n              </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class SinglePricebox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    isInEditMode: false,\n    todaydate: this.props.date\n  };\n\n  this.toggleEditPriceSubmission = this.toggleEditPriceSubmission.bind(this);\n}\n\ntoggleEditPriceSubmission() {\n  this.setState(state => ({ isInEditMode: !state.isInEditMode }));\n}\n\n\n  render() {\n    const { isInEditMode, index } = this.state;\n    return (\n      <div className=\"pricebox\">\n        <article className=\"pricetable\">\n          <table>\n            <tbody>\n              <tr>\n                <td className=\"date-width\">{this.props.date}</td>\n                <td className=\"price-width\">\n                {isInEditMode ? (\n                    <input type=\"text\" name=\"number\" value={this.props.number} onChange={event => this.props.onChange(event, index)}  />\n                  ) : (\n                    this.props.number\n                  )}\n                </td>\n                <td className=\"editing-btn\">\n                  <button\n                    type=\"button\"\n                    className=\"edit-btn\"\n                    onClick={this.toggleEditPriceSubmission}\n                  >\n                    {isInEditMode ? \"Save\" : \"Edit\"}\n                  </button>\n                </td>\n                <td>\n                {this.props.handleDeletePrice && (\n                  <button\n                    type=\"button\"\n                    className=\"delete-btn\"\n                    onClick={() => this.props.handleDeletePrice(this.props.date)}\n                    >\n                      X\n                    </button>\n                    )}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </article>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport FormField from \"../FormFieldBox/index\";\n\nexport default class AddPriceForm extends Component {\n  constructor(props) {\n    super(props);\n\n    // initializes state from props if your editing a security\n    // else it'll be a blank form\n    this.state = {\n      date: new Date().toLocaleDateString(),\n      number: props.number || \"\",\n      formErrors: false\n    };\n  }\n\n  /* \n    updates the \"date\" and \"number\" form fields via \n    [e.target.name]: e.target.value \n  */\n  updateInput = ({ target: { name, value, type } }) =>\n    this.setState({ [name]: type === 'number' ? Number(value) : value });\n\n  /* handles security form submissions */\n  handlePriceFormSubmit = e => {\n    // prevents page refreshes on submission\n    e.preventDefault();\n\n    const { date, number } = this.state;\n    const { addPrice } = this.props;\n\n    const fields = {\n      date,\n      number\n    };\n\n    // checks if any of the form fields contain empty values\n    const formErrors = Object.values(fields).some(value => !value);\n\n    this.setState({ formErrors }, () => {\n      if (!formErrors) {\n        if (addPrice) addPrice(fields);\n      }\n    });\n  };\n\n  render() {\n    const { date, number, formErrors } = this.state;\n\n    return (\n      <div className=\"mini-popup\">\n        <div className=\"mini-popup-inner\">\n          <form onSubmit={this.handlePriceFormSubmit} className=\"addprice-form\">\n            <h2>Add Price</h2>\n            <div className=\"addform-input\">\n              <h4>Today's date:</h4>\n              <h3>{date}</h3>\n              <FormField\n                onChange={this.updateInput}\n                hasError={formErrors}\n                label=\"Price Number\"\n                type=\"number\"\n                name=\"number\"\n                value={number}\n              />\n            </div>\n            <div className=\"buttons-box flex-content-end\">\n              <div className=\"add-btns\">\n              <button\n                type=\"button\"\n                onClick={() => this.props.cancelPopup()}\n                className=\"btn cancel-button\"\n              >\n                Cancel\n              </button>\n              <button type=\"submit\" className=\"btn save-button\">\n                Submit\n              </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PriceBox from \"../SinglePricebox/index\";\nimport AddPriceForm from \"../AddPriceForm/index\";\n\nexport default class PriceForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      priceArr: this.props.pricelist,\n      showPricePopup: false,\n      addPricePopup: false,\n      todaydate: new Date().toLocaleDateString(),\n      date: props.date || \"\",\n      number: props.number || \"\",\n      buttonDisabled: this.props.buttonStatus\n    };\n  }\n\n  updateInput = ({ target: { name, value } }) =>\n  this.setState({ [name]: value });\n\n  togglePopup = () => {\n    this.setState(prevState => ({\n      showPopup: !prevState.showPopup \n    }));\n  };\n\n  togglePricePopup = () => {\n    this.setState(prevState => ({\n      showPricePopup: !prevState.showPricePopup\n    }));\n  };\n\n  toggleItemEditing = index => {\n    this.setState({\n      priceArr: this.state.priceArr.map((item, itemIndex) => {\n        if (itemIndex === index) {\n          return {\n            ...item,\n            isEditing: !item.isEditing\n          }\n        }\n        return item;\n      })\n    });\n  };\n\n  handlePriceUpdate = (event, index) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      priceArr: this.state.priceArr.map((item, itemIndex) => {\n        if (itemIndex === index) {\n          return {\n            ...item,\n            [name]: value\n          }\n        }\n        return item;\n      })\n    });\n  };\n\n  addPricePopup = () => {\n    this.setState(prevState => ({\n      addPricePopup: !prevState.addPricePopup\n    }));\n    \n  };\n\n    /* adds a new price to the list */\n    addPrice = newPrice => {\n      this.setState(prevState => ({\n        addPricePopup: !prevState.addPricePopup,\n        // spreads out the previous list and adds the new price with a unique id\n        priceArr: [...prevState.priceArr, { ...newPrice }],\n        buttonDisabled: true\n      }));\n    };\n    \n    handleDeletePrice = deletePriceDate => {\n      const { todaydate } = this.state;\n      this.setState(prevState => ({\n        // spreads out the previous list and delete the price with a unique id\n        priceArr: prevState.priceArr.filter(item => item.date !== deletePriceDate),\n        buttonDisabled: !(deletePriceDate === todaydate)        \n      }));\n    };\n\n\n    handleFormSubmit = () => {\n  \n      const { priceArr, buttonDisabled } = this.state;\n  \n      const fields = {priceArr, buttonDisabled};\n  \n      this.props.updatePrice(fields);\n\n    };\n\n\n  render() {\n    return (\n      <div className=\"popup\">\n        <div className=\"popup-inner\">\n          <div className=\"price-form\">\n            <h2>Prices</h2>\n            <div className=\"scroll-box\">\n            {this.state.priceArr.map((props, index) => (\n              <PriceBox\n                {...props}\n                key={props.date}\n                toggleEditing={() => this.toggleItemEditing(index)}\n                handleDeletePrice={this.handleDeletePrice}\n                onChange={(e) => this.handlePriceUpdate(e, index)}\n              />\n            ))}\n            </div>\n            <div className=\"buttons-box flex-content-between\">\n            <div className=\"add_btn\">\n              <button\n                type=\"button\"\n                onClick={this.addPricePopup}\n                className=\"btn add-button\"\n                disabled={this.state.buttonDisabled}\n                >Add +</button>\n                {this.state.addPricePopup && (\n                      <AddPriceForm\n                        addPrice={this.addPrice}\n                        cancelPopup={this.addPricePopup}\n                      />\n                    )}\n              {this.state.buttonDisabled ? <p>Only one entry per day.</p> : \"\"}\n              </div>\n              <div className=\"add-btns\">\n              <button\n                type=\"button\"\n                onClick={this.handleFormSubmit}\n                className=\"btn cancel-button\"\n              >\n                Close\n              </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport SecurityForm from \"../SecurityForm/index\";\nimport PriceForm from \"../PriceForm/index\";\n\nexport default class SingleSecuritybox extends Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n        showPopup: false,\n        showPricePopup: false, //don't show popup\n        pricelist: this.props.price,\n        buttonStatus: this.props.buttonstatus\n    };\n    // console.log(\"button status single security\", this.state.buttonStatus);\n  }\n\n  /* toggle and close popup edit form window */\n  togglePopup = () => {\n    this.setState(prevState => ({\n      showPopup: !prevState.showPopup\n    }));\n  };\n\n  togglePricePopup = () => {\n    this.setState(prevState => ({\n      showPricePopup: !prevState.showPricePopup\n    }));\n  };\n\n  /* handles edit current security form submissions */\n  handleEditSecuritySubmission = editSecurity => {\n    const { editCurrentSecurity, id } = this.props;\n\n    // toggle the pop up (close)\n    this.togglePopup();\n\n    // sends the editSecurity fields (name, isin, country) + id back to\n    // App's \"this.editCurrentSecurity\"\n    editCurrentSecurity({ ...editSecurity, id });\n    // console.log(\"editing security\", editSecurity);\n  };\n\n  updatePrice = updatePrice => {\n    const { updatePriceList, updateButtonStatus, id } = this.props;\n    \n    this.togglePricePopup();\n\n    updatePriceList({...updatePrice, id});\n    updateButtonStatus({...updatePrice, id});\n\n  };\n\n\n    /* handles delete current security form submissions */\n  handleDeleteSecurity = () => {\n    const { deleteSecurity, id } = this.props;\n\n    // toggle the pop up (close)\n    this.togglePopup();\n\n    // sends the id back to  App's \"this.deleteSecurity\"\n    deleteSecurity(id);\n  };\n\n\n  render() {\n    return (\n      <div className=\"box\">\n        <article className=\"securitytable\">\n          <div className=\"title\">\n            <h2>\n              <strong>{this.props.name}</strong>\n            </h2>\n            <hr className=\"lightgray-line\" />\n          </div>\n          <table>\n            <tbody>\n              <tr>\n                <td className=\"isin-width\">{this.props.isin}</td>\n                <td className=\"country-width\">{this.props.country}</td>\n                <td className=\"price-popup\">\n                  <button type=\"button\" className=\"price-btn\" onClick={this.togglePricePopup}>Prices</button>\n                  {this.state.showPricePopup ? (\n                    <PriceForm\n                      pricelist= {this.props.price}\n                      buttonStatus= {this.props.buttonstatus}\n                      updatePrice={ this.updatePrice }\n                      addPrice={this.props.addPrice}\n                      closePopup= {this.togglePricePopup}\n                    />\n                  ) : null}\n                </td>\n                <td className=\"editing-btn\">\n                  <button\n                    type=\"button\"\n                    className=\"edit-btn\"\n                    onClick={this.togglePopup}\n                  >\n                    Edit\n                  </button>\n                  {this.state.showPopup ? (\n                    <SecurityForm\n                      {...this.props}\n                      handleEditSecuritySubmission={ this.handleEditSecuritySubmission }\n                      handleDeleteSecurity={this.handleDeleteSecurity}\n                      cancelPopup={this.togglePopup}\n                    />\n                  ) : null}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </article>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport SecurityBox from \"./components/SingleSecuritybox/index\";\nimport SecurityForm from \"./components/SecurityForm\";\nimport logo from \"./images/caissa-icon.png\";\nimport { uuid } from \"uuidv4\";\nimport securitiesgroup from \"../src/securities.json\";\nimport \"./App.css\";\n\n\nclass App extends Component {\n  state = {\n    list: securitiesgroup,\n    showPopup: false\n  };\n\n  /* toggle and close popup window */\n  togglePopup = () => {\n    this.setState(prevState => ({\n      showPopup: !prevState.showPopup \n    }));\n  };\n\n  /* edits current security */\n  editCurrentSecurity = editedSecurity => {\n    this.setState(prevState => ({\n      list: prevState.list.map(list =>\n        list.id === editedSecurity.id ? { list, ...editedSecurity } : list\n      )\n    }));\n    console.log(\"edited security\", editedSecurity);\n  };\n\n  /* delete the security from the list */\n  deleteSecurity = deleteSecurityId => {\n    this.setState(prevState => ({\n      list: prevState.list.filter(item => item.id !== deleteSecurityId)\n    }));\n  };\n\n  /* adds a new security to the list */\n  addSecurity = newSecurity => {\n    this.setState(prevState => ({\n      showPopup: !prevState.showPopup,\n      // spreads out the previous list and adds the new security with a unique id\n      list: [...prevState.list, { ...newSecurity, id: uuid(), prices: [] }]\n    }));\n  };\n\n  updatePriceList = (newPriceList) => {\n    this.setState(prevState => {\n      return {\n        list: prevState.list.map(list => {\n          if (list.id === newPriceList.id) {\n            return { ...list, price: newPriceList.priceArr };\n          } else {\n            return list;\n          }\n        })\n      };\n    });\n  };\n\n  updateButtonStatus = (newPriceList) => {\n    this.setState(prevState => {\n      return {\n        list: prevState.list.map(list => {\n          if (list.id === newPriceList.id) {\n            return { ...list, buttonstatus: newPriceList.buttonDisabled };\n          } else {\n            return list;\n          }\n        })\n      };\n    });\n  };\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <a href=\"/\" className=\"App-link\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            Annotations\n          </a>\n        </header>\n        <div className=\"securities\">\n          <div className=\"container\">\n            <h2>Securities</h2>\n            {this.state.list.map(props => (\n              <SecurityBox\n                {...props}\n                key={props.id}\n                updatePriceList={this.updatePriceList} \n                updateButtonStatus={this.updateButtonStatus}\n                securitylist = {this.state.list}\n                editCurrentSecurity={this.editCurrentSecurity}\n                deleteSecurity={this.deleteSecurity}\n              />\n            ))}\n            <button\n              type=\"button\"\n              className=\"btn add-btn\"\n              onClick={this.togglePopup}\n            >\n              Add\n            </button>\n            {this.state.showPopup && (\n              <SecurityForm\n                addSecurity={this.addSecurity}\n                cancelPopup={this.togglePopup}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}